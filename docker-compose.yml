version: '3.7'


networks:
        dostyk:
                driver: bridge
                ipam:
                        config:
                                - subnet: 10.50.0.0/16

volumes:
        mongoVolume: null


services:
        zoo:
                image: confluentinc/cp-zookeeper:latest
                restart: "on-failure"
                hostname: zoo
                container_name: zoo
                networks:
                        dostyk:
                                ipv4_address: 10.50.3.1
                environment:
                        ZOOKEEPER_CLIENT_PORT: 2181
                        ZOOKEEPER_TICK_TIME: 2000
                        ZOOKEEPER_INIT_LIMIT: 5
                        ZOOKEEPER_SYNC_LIMIT: 2
                        ZOOKEEPER_MAX_CLIENT_CNXNS: 1000
                        ZOOKEEPER_GLOBAL_OUTSTANDING_LIMIT: 1000
                        ZOOKEEPER_SNAP_COUNT: 100000
                        ZOOKEEPER_AUTOPURGE_SNAP_RETAIN_COUNT: 3
                        ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL: 0
                        ZOOKEEPER_4LW_COMMANDS_WHITELIST: '*'
                        KAFKA_HEAP_OPTS: '-Xms1g -Xmx1g'
                        LOG_DIR: /var/log/zookeeper
                        ZOOKEEPER_DATA_DIR: /var/lib/zookeeper
                        ZOOKEEPER_SERVER_ID: 1
                volumes:
                        - ./servers/zoo/node-1/lib/data:/var/lib/zookeeper/data
                        - ./servers/zoo/node-1/lib/log:/var/lib/zookeeper/log
                        - ./servers/zoo/node-1/log:/var/log/zookeeper



        kafka:
                image: confluentinc/cp-kafka:latest
                restart: "on-failure"
                hostname: kafka
                container_name: kafka
                ports:
                        - 9092:9092
                        - 19092:19092
                networks:
                        dostyk:
                                ipv4_address: 10.50.5.1
                environment:
                        KAFKA_BROKER_ID: 1
                        KAFKA_ZOOKEEPER_CONNECT: 10.50.3.1:2181
                        KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://10.50.5.1:9092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:19092
                        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
                        KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
                        KAFKA_LOG4J_LOGGERS: "kafka.comtroller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
                        KAFKA_HEAP_OPTS: '-Xms4g -Xmx4g'
                        KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
                        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
                        KAFKA_DEFAULT_REPLICATION_FACTOR: 1
                        KAFKA_NUM_PARTITIONS: 1
                        KAFKA_LOG_RETENTION_HOURS: 168
                        KAFKA_OFFSETS_RETENTION_MINUTES: 10080
                        KAFKA_OFFSETS_TOPIC_NUM_PARTITIONS: 48
                        KAFKA_OFFSETS_TOPIC_REPLICATIONS_FACTOR: 1
                        KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
                        KAFKA_TRANSACTION_STATE_LOG_NUM_PARTITIONS: 48
                        KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
                        KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
                        KAFKA_DATA_DIR: /var/lib/kafka
                        LOG_DIR: /var/log/kafka
                        CONFLUENT_METRICS_ENABLE: 'false'
                        CONFLUENT_SUPPORT_CUSTOMERS_ID: 'anonymous'
                        CONFLUENT_SUPPORT_METRICS_ENABLE: 0
                volumes:
                        - ./servers/kafka/node-1/data:/var/lib/kafka/data
                        - ./servers/kafka/node-1/log:/var/log/kafka
                        - ./scripts:/opt/scripts
                depends_on:
                        - zoo
                links:
                        - zoo


        
        # hashtags:
        #         image: sagaslife/hashtag
        #         restart: "on-failure"
        #         hostname: htms
        #         container_name: htms
        #         networks:
        #                 dostyk:
        #                         ipv4_address: 10.50.1.3
        #         ports:
        #                 - 4000:4000
        #         depends_on:
        #                 - kafka
        #         environment:
        #                 - VERTX_CONFIG_PATH=/opt/server/conf/config.json
        #         volumes:
        #                 - ./HashtagMicroservice/conf:/opt/server/conf
        #         entrypoint: ["sh", "-c"]
        #         command: ["java -jar hashtags-0.1.0-all.jar run hashtags.verticles.MainVerticle -cluster -conf /opt/server/conf/config.json"]



        # location:
        #         image: sagaslife/location
        #         restart: "on-failure"
        #         hostname: location-microservice
        #         container_name: location-microservice
        #         networks:
        #                 dostyk:
        #                         ipv4_address: 10.50.5.2
        #         depends_on:
        #                 - kafka
        #         environment:
        #                 - VERTX_CONFIG_PATH=/opt/server/conf/config.json
        #         entrypoint: ["sh", "-c"]
        #         depends_on:
        #                 - kafka
        #         command: ["exec java -jar app.jar -cluster"]


        # mongodb:
        #         image: mongo:latest
        #         restart: "on-failure"
        #         container_name: "mongodb"
        #         networks:
        #                 dostyk:
        #                         ipv4_address: 10.50.1.2
        #         environment:
        #                 - MONGO_INITDB_ROOT_USERNAME=root
        #                 - MONGO_INITDB_ROOT_PASSWORD=passwd
        #                 - MONGO_INITDB_DATABASE=timelapses
        #         volumes:
        #                 - ./timelapse-microservice/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
        #                 - mongoVolume:/data/db
        #         ports:
        #                 - 27017:27017


        # mainverticle:
        #         image: sagaslife/timelapse
        #         restart: "on-failure"
        #         hostname: mainVerticle
        #         container_name: mainVerticle
        #         networks:
        #                 dostyk:
        #                         ipv4_address: 10.50.1.5
        #         depends_on:
        #                 - mongodb
        #                 - kafka
        #         environment:
        #                 - VERTX_CONFIG_PATH=/opt/server/conf/config.json
        #         volumes:
        #                 - ./timelapse-microservice/conf:/opt/server/conf
        #         entrypoint: ["sh", "-c"]
        #         command: ["java -jar timelapses-0.1.0-all.jar run timelapses.verticles.main.MainVerticle -cluster -conf /opt/server/conf/config.json"]



        # notification:
        #         image: sagaslife/pushnotification
        #         restart: "on-failure"
        #         hostname: notification
        #         container_name: notification
        #         networks:
        #                 dostyk:
        #                         ipv4_address: 10.50.1.4
        #         depends_on:
        #                 - kafka
        #         environment:
        #                 - VERTX_CONFIG_PATH=/opt/server/conf/config.json
        #         entrypoint: ["sh", "-c"]
        #         command: ["java -jar notification-0.1.0-all.jar run notification.verticles.MainVerticle -cluster -conf /opt/server/conf/config.json"]


        # envoy:
        #         build: gateway/
        #         restart: "on-failure"
        #         hostname: envoy
        #         container_name: envoy
        #         volumes:
        #                 - ./gateway/front-envoy.yaml:/etc/front-envoy.yaml
        #         networks:
        #                 dostyk:
        #                         ipv4_address: 10.50.10.1
        #         expose:
        #                 - "80"
        #                 - "8001"
        #         ports:
        #                 - "8000:80"
        #                 - "8001:8001"




        scale:
                build: photo-scale-microservice/
                restart: "on-failure"
                hostname: scls
                container_name: scls
                env_file: 
                        .env
                networks:
                        dostyk:
                                ipv4_address: 10.50.1.1
                environment: 
                        VERTX_CONFIG_PATH: conf/config.json
                volumes:
                        - ./photo-scale-microservice/scales/src/main/resources/conf:/opt/server/conf
                entrypoint: ["sh", "-c"]
                command: ["java -jar scales-0.1.0-all.jar run scales.verticles.MainVerticle -cluster -conf /opt/server/conf/config.json"]

